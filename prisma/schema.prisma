// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  profile  Profile[]
  role     Role      @default(USER)
  Cart     Product[]
}

model Profile {
  id          Int           @id @default(autoincrement())
  userId      Int
  user        User          @relation(fields: [userId], references: [id])
  name        String        @unique
  address     String?
  gender      String?
  phone       String?
  Transaction Transaction[]
  Product     Product[]
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  price       String
  quantity    String
  images      ImageProduct[]
  profileId   Int?

  createdAt   DateTime      @default(now())
  Profile     Profile?      @relation(fields: [profileId], references: [id], onDelete: Cascade)
  Category    Category?     @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int?
  Transaction Transaction[]
  User        User?         @relation(fields: [userId], references: [id])
  userId      Int?
}

model Transaction {
  id        Int @id @default(autoincrement())
  profileId Int
  productId Int

  profile Profile @relation(fields: [profileId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([productId, profileId])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model ImageProduct {
  id        Int     @id @default(autoincrement())
  productId Int
  imageUrl  String
  products  Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}
